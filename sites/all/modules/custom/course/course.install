<?php

/**
 * Implements hook_update().
 */

function course_schema() {
	$schema[COURSE_CURRENT_TABLE] = array(
		'description' => 'Stores currently selected course per user',
		'fields' => array(
			'uid' => array(
				'type' => 'int',
				'unsigned' => TRUE,
				'not null' => TRUE,
			),
			'gid' => array(
				'type' => 'int',
				'unsigned' => TRUE,
			),
		),
		'primary key' => array('uid'),
	);
	return $schema;
}
/**
 * Delete the field field_visibility
 */
function course_update_7100() {
  field_delete_field('field_visibility');
}

/**
 * Add db table for storing user's current course
 */
function course_update_7101() {
	$schema = array(
		'description' => 'Stores currently selected course per user',
		'fields' => array(
			'uid' => array(
				'type' => 'int',
				'unsigned' => TRUE,
				'not null' => TRUE,
			),
			'gid' => array(
				'type' => 'int',
				'unsigned' => TRUE,
			),
		),
		'primary key' => array('uid'),
	);
	db_create_table(COURSE_CURRENT_TABLE, $schema);
}

/**
 * Update all responses to have correct group content privacy settings
 */
function course_update_7102() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'response');
  $result = $query->execute();
  if (isset($result['node'])) {
    $nodes = entity_load('node', array_keys($result['node']));
    foreach ($nodes as $node) {
      $wrapper = entity_metadata_wrapper('node', $node);
      $wrapper->group_content_access->set(OG_CONTENT_ACCESS_PRIVATE);
      $wrapper->save();
    }
  }
  node_access_rebuild();
}

/**
 * Strip HTML from existing course descriptions
 */
function course_update_7103() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'course');
  $result = $query->execute();
  if (isset($result['node'])) {
    $nodes = entity_load('node', array_keys($result['node']));
    foreach ($nodes as $node) {
      $wrapper = entity_metadata_wrapper('node', $node);
      $body = $wrapper->body->value->raw();
      $wrapper->body->value = strip_tags(html_entity_decode($body));
      $wrapper->save();
    }
  }
}